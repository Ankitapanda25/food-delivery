/*!
 * name: @jswork/next-local-storage
 * description: LocalStorage based on next.
 * homepage: https://js.work
 * version: 1.0.9
 * date: 2023-07-27 18:00:43
 * license: MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = void 0;
var _next = _interopRequireDefault(require('@jswork/next'));
require('@jswork/next-abstract-storage');
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var NxLocalStorage = _next['default'].declare('nx.LocalStorage', {
  extends: _next['default'].AbstractStorage,
  methods: {
    init: function init(inPrefix) {
      this.$base.init.call(this, {
        engine: global.localStorage,
        prefix: inPrefix || ''
      });
    }
  }
});
if (typeof module !== 'undefined' && module.exports && typeof wx === 'undefined') {
  module.exports = NxLocalStorage;
}
var _default = NxLocalStorage;
exports['default'] = _default;
